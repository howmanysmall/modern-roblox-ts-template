{
	"Flamework Controller": {
		"body": [
			"//!optimize 2",
			"",
			"import { Controller, OnInit, OnStart } from \"@flamework/core\";",
			"import type { LogClass } from \"@rbxts/rbxts-sleitnick-log\";",
			"",
			"@Controller({})",
			"export class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} implements OnInit, OnStart {",
				"\tpublic constructor(private readonly log: LogClass) {}",
			"",
				"\tpublic onInit() {",
					"\t\t$2",
				"\t}",
			"",
				"\tpublic onStart() {",
					"\t\t$0",
				"\t}",
			"}",
		],
		"description": "Create a Flamework controller",
		"prefix": ["controller", "flameworkcontroller"],
		"scope": "typescript,typescriptreact",
	},

	"Flamework Service": {
		"body": [
			"//!optimize 2",
			"",
			"import { OnInit, OnStart, Service } from \"@flamework/core\";",
			"import type { LogClass } from \"@rbxts/rbxts-sleitnick-log\";",
			"",
			"@Service({})",
			"export class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} implements OnInit, OnStart {",
				"\tpublic constructor(private readonly log: LogClass) {}",
			"",
				"\tpublic onInit() {",
					"\t\t$2",
				"\t}",
			"",
				"\tpublic onStart() {",
					"\t\t$0",
				"\t}",
			"}",
		],
		"description": "Create a Flamework service",
		"prefix": ["service", "flameworkservice"],
		"scope": "typescript,typescriptreact",
	},

	"Flamework Component": {
		"body": [
			"//!optimize 2",
			"",
			"import { BaseComponent, Component } from \"@flamework/components\";",
			"import { OnStart } from \"@flamework/core\";",
			"import type { LogClass } from \"@rbxts/rbxts-sleitnick-log\";",
			"",
			"interface Attributes {}",
			"",
			"@Component({})",
			"export class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends BaseComponent<Attributes> implements OnStart {",
				"\tpublic constructor(private readonly log: LogClass) {",
					"\t\tsuper();",
				"\t}",
			"",
				"\tpublic onStart() {",
					"\t\t$0",
				"\t}",
			"}",
		],
		"description": "Create a Flamework component",
		"prefix": ["component", "flameworkcomponent"],
		"scope": "typescript,typescriptreact",
	}
}
